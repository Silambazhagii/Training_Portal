# Day 1 – Project Setup (14th Apr / 25th Apr)

## 🎯 Goals:
- Created Django project: `training_portal`
- Created app: `core`
- Created models:
  - `Employee`: Name, Email, Department
  - `TrainingProgram`: Title, Description, Start Date, End Date
  - `Enrollment`: Links Employee ↔ Program
- Registered models in admin panel
- Initialized GitHub repo and pushed code as PR #1
- Deployed basic setup on Render (optional)

## 📌 Repo:
[GitHub Repo](https://github.com/Silambazhagii/Python_Bootcamp/tree/main/Day6)


# Day 2 – CRUD and Templates (16th Apr / 28th Apr)

## 🎯 Goals:
- Created views to List and Add Employees and Trainings
- Setup HTML templates for forms and listing
- Implemented basic Create and Read functionalities
- Successfully deployed updates to live site

## 📸 Proof:
- Screenshots added in journal
- Live site updated [Deployed Link]

## 🔗 Repo:
[GitHub Repo](https://github.com/Silambazhagii/Python_Bootcamp/tree/main/Day9)

## 🔗 PR #3:
- Title: CRUD and Templates Setup for Employees and Trainings

# Training Portal 🧑‍🏫

A full-featured training management web app for employee scheduling, attendance tracking, and performance reports.

## 🚀 Features
- User Authentication (Admin + Employees)
- Add/View/Edit/Delete Employees
- Assign Training Programs
- Mark Attendance
- View Reports
- Responsive UI with modern design

## 🛠️ Tech Stack
- **Frontend**: HTML, CSS, JavaScript (or React if applicable)
- **Backend**: Django (Python)
- **Database**: SQLite / PostgreSQL

## 📸 Screenshots
(Add images or GIFs showing the main pages: login, dashboard, employee list, reports)

## 🧪 How to Run Locally
```bash
git clone https://github.com/your-username/training-portal.git
cd training-portal
pip install -r requirements.txt
python manage.py migrate
python manage.py runserver



FOLDER STRUCTURE

training_portal/
├── core/
│   ├── models.py
│   ├── views.py
│   ├── urls.py
│   └── templates/
├── training_portal/
│   └── settings.py
├── static/
├── manage.py
└── README.md
